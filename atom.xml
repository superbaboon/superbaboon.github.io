<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[SuperBaboon's Blog]]></title>
  <link href="http://superbaboon.github.io/atom.xml" rel="self"/>
  <link href="http://superbaboon.github.io/"/>
  <updated>2014-03-15T13:34:58+08:00</updated>
  <id>http://superbaboon.github.io/</id>
  <author>
    <name><![CDATA[SuperBaboon]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Log4j源码学习]]></title>
    <link href="http://superbaboon.github.io/blog/2014/03/15/log4j-source-learning-start/"/>
    <updated>2014-03-15T11:50:29+08:00</updated>
    <id>http://superbaboon.github.io/blog/2014/03/15/log4j-source-learning-start</id>
    <content type="html"><![CDATA[<ul>
<li>解决什么问题

<ul>
<li>[核心]：哪些地方需要打印日志？</li>
<li>[核心]：日志需要打印到什么地方？</li>
<li>[核心]：日志需要用什么格式打印？</li>
<li>[优化]：不侵入业务代码的前提下，如何实现某些情况打印？某些情况不打印？</li>
<li>[优化]：不侵入业务代码的前提下，如何满足一条日志可以输出到不同渠道（文件、控制台）</li>
<li>[优化]：不侵入业务代码的情况下，增加添加输出格式，增加输出渠道等问题</li>
</ul>
</li>
</ul>


<hr />

<ul>
<li>Log4j的解决方式

<ul>
<li>不侵入业务代码的情况下，实现某些情况下打印，某些情况不打印?

<ul>
<li>Level机制</li>
</ul>
</li>
<li>如何满足一条日志输出到不同渠道

<ul>
<li>日志和输出分离</li>
</ul>
</li>
<li>如何在不修改业务代码的情况下，增加添加输出格式，增加输出渠道等问题

<ul>
<li>配置化（properties文件、xml配置）</li>
</ul>
</li>
</ul>
</li>
</ul>


<hr />

<h3>Log4j的核心组件</h3>

<p><strong><a href="http://logging.apache.org/log4j/1.2/manual.html">官方链接</a></strong></p>

<ul>
<li>Logger：日志埋点（所有需要输出日志的地方）</li>
<li>Appender：日志的输出渠道</li>
<li>Layout：日志的格式</li>
</ul>


<p><img src="http://superbaboon.github.io/images/Log4j_logger_appender_layout_uml.jpg" alt="UML" /></p>

<h4>Logger</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 生成Logger对象
</span><span class='line'>private final Logger logger = LoggerFactory.getLogger(A.class);
</span><span class='line'>
</span><span class='line'>// 打印日志
</span><span class='line'>logger.info("info…");
</span><span class='line'>logger.warn("warn…");
</span><span class='line'>logger.error("error…");</span></code></pre></td></tr></table></div></figure>


<h4>Appender(一般情况下不需要在程序代码中使用)</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;appender name="CONSOLE" class="xxx.xxx.ExtendedConsoleAppender"&gt;
</span><span class='line'>  &lt;param name="Target" value="System.out" /&gt;
</span><span class='line'>  &lt;layout class="org.apache.log4j.PatternLayout"&gt;
</span><span class='line'>      &lt;param name="ConversionPattern" value="[review-web]%d %-5p [%c %L] %m%n" /&gt;
</span><span class='line'>  &lt;/layout&gt;
</span><span class='line'>&lt;/appender&gt;</span></code></pre></td></tr></table></div></figure>


<h3>Log4j的Level机制</h3>

<ul>
<li>解决的问题：不侵入业务代码的前提下，实现某些情况下打印，某些情况不打印?

<ul>
<li>Logger.setLevel(Level.INFO)</li>
<li>logger.warn(&ldquo;warn…&rdquo;)</li>
<li>compare</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>A log request of level p in a logger with (either assigned or inherited, whichever is appropriate) level q, is enabled if p &gt;= q.</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// get a logger instance named "com.foo"
</span><span class='line'>Logger  logger = Logger.getLogger("com.foo");
</span><span class='line'>
</span><span class='line'>// Now set its level. Normally you do not need to set the
</span><span class='line'>// level of a logger programmatically. This is usually done
</span><span class='line'>// in configuration files.
</span><span class='line'>logger.setLevel(Level.INFO);
</span><span class='line'>
</span><span class='line'>Logger barlogger = Logger.getLogger("com.foo.Bar");
</span><span class='line'>
</span><span class='line'>// This request is enabled, because WARN &gt;= INFO.
</span><span class='line'>logger.warn("Low fuel level.");
</span><span class='line'>
</span><span class='line'>// This request is disabled, because DEBUG &lt; INFO.
</span><span class='line'>logger.debug("Starting search for nearest gas station.");
</span><span class='line'>
</span><span class='line'>// The logger instance barlogger, named "com.foo.Bar",
</span><span class='line'>// will inherit its level from the logger named
</span><span class='line'>// "com.foo" Thus, the following request is enabled
</span><span class='line'>// because INFO &gt;= INFO.
</span><span class='line'>barlogger.info("Located nearest gas station.");
</span><span class='line'>
</span><span class='line'>// This request is disabled, because DEBUG &lt; INFO.
</span><span class='line'>barlogger.debug("Exiting gas station search");) </span></code></pre></td></tr></table></div></figure>


<h3>Appender机制</h3>

<ul>
<li>解决的问题：不侵入业务代码的前提下，如何满足一条日志可以输出到不同渠道（文件、控制台）

<ul>
<li>日志打印与输出分离</li>
<li>一个Logger有多个Appender</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>// 伪代码
</span><span class='line'>
</span><span class='line'>logger.addAppender(new ConsoleAppender());
</span><span class='line'>logger.addAppender(new FileAppender());
</span><span class='line'>
</span><span class='line'>logger.warn(msg)等价于
</span><span class='line'>
</span><span class='line'>for (Appender appender : appenderList) {
</span><span class='line'>  appender.doAppender(msg)
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>配置化</h3>

<ul>
<li>解决的问题：不侵入业务代码的情况下，增加添加输出格式，增加输出渠道等问题

<ul>
<li>配置化</li>
<li>XML配置、Properties配置</li>
</ul>
</li>
</ul>


<h4>Properties配置</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>log4j.rootLogger=debug, R
</span><span class='line'>
</span><span class='line'>log4j.appender.R=org.apache.log4j.RollingFileAppender
</span><span class='line'>log4j.appender.R.File=example.log
</span><span class='line'>
</span><span class='line'>log4j.appender.R.layout=org.apache.log4j.PatternLayout
</span><span class='line'>log4j.appender.R.layout.ConversionPattern=%p %t %c - %m%n</span></code></pre></td></tr></table></div></figure>


<h4>等价的XML配置</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;appender name="R" class="org.apache.log4j.RollingFileAppender"&gt;
</span><span class='line'>   &lt;param name="File" value="example.log" /&gt;
</span><span class='line'>   &lt;layout class="org.apache.log4j.PatternLayout"&gt;
</span><span class='line'>      &lt;param name="ConversionPattern" value="[review-web]%d %-5p [%c %L] %m%n" /&gt;
</span><span class='line'>   &lt;/layout&gt;
</span><span class='line'>&lt;/appender&gt;
</span><span class='line'>
</span><span class='line'>&lt;root&gt;
</span><span class='line'>   &lt;level value="debug" /&gt;
</span><span class='line'>   &lt;appender-ref ref="R" /&gt;
</span><span class='line'>&lt;/root&gt;</span></code></pre></td></tr></table></div></figure>


<h3>Bonus</h3>

<h4>Logger的继承机制</h4>

<h5>Name Inheritance</h5>

<ul>
<li>com.foo.bar &mdash;&mdash;> com.foo</li>
<li>Logger logger = Logger.getLogger(&ldquo;com.foo.bar&rdquo;);</li>
<li><strong>RootLogger除外：不可以通过getLogger获取</strong></li>
</ul>


<h5>Level Inheritance</h5>

<table>
<thead>
<tr>
<th></th>
<th> Logger name </th>
<th> Level </th>
<th> Inherited Level </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> Root </td>
<td> LevelRoot  </td>
<td> LevelRoot </td>
</tr>
<tr>
<td></td>
<td> X </td>
<td> LevelX  </td>
<td> LevelX </td>
</tr>
<tr>
<td></td>
<td> X.Y </td>
<td> none  </td>
<td> LevelX </td>
</tr>
<tr>
<td></td>
<td> X.Y.Z </td>
<td> LevelXYZ  </td>
<td> LevelXYZ </td>
</tr>
</tbody>
</table>


<h4>Appender Additivity</h4>

<ul>
<li>默认情况下：一个Logger&copy;的日志请求&mdash;>C.parent&mdash;>…&mdash;>RootLogger</li>
<li>不需要扩散：就配置Logger的Additivity为false</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;logger name="com.ibatis" additivity="false"&gt;
</span><span class='line'>   &lt;level value="WARN" /&gt;
</span><span class='line'>   &lt;appender-ref ref="CONSOLE" /&gt;
</span><span class='line'>   &lt;appender-ref ref="ibatisAppender" /&gt;
</span><span class='line'>&lt;/logger&gt;</span></code></pre></td></tr></table></div></figure>


<p>Rules of Appender Additivity</p>

<table>
<thead>
<tr>
<th></th>
<th> Logger name </th>
<th> Added Appenders  </th>
<th> Additivity Flag </th>
<th> Output Targets </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td> Root </td>
<td> A1  </td>
<td> <strong>not applicable</strong> </td>
<td> A1 </td>
</tr>
<tr>
<td></td>
<td> X </td>
<td> A2  </td>
<td> true </td>
<td> A1, A2 </td>
</tr>
<tr>
<td></td>
<td> X.Y </td>
<td> A3 </td>
<td> false </td>
<td> A3 </td>
</tr>
<tr>
<td></td>
<td> X.Y.Z </td>
<td> A4 </td>
<td> true </td>
<td> A3, A4 </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spring--ApplicationEvent]]></title>
    <link href="http://superbaboon.github.io/blog/2014/03/07/demo/"/>
    <updated>2014-03-07T22:10:33+08:00</updated>
    <id>http://superbaboon.github.io/blog/2014/03/07/demo</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
